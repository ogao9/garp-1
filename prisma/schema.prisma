generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url = env("POSTGRES_GARP_PRISMA_URL")
  directUrl = env("POSTGRES_GARP_URL_NON_POOLING")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String  @map("user_id")
  user               User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  type               String
  provider           String
  providerAccountId  String  @map("provider_account_id")
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  oauth_token_secret String?
  oauth_token        String?

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  expires      DateTime
}

model VerificationToken {
  id         Int      @id @default(autoincrement())
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model User {
  id            String      @id @default(cuid())
  createdAt     DateTime    @default(now())
  email         String?     @unique
  name          String?
  image         String?
  emailVerified DateTime?
  accounts      Account[]
  sessions      Session[]
  saves         Saved[]
  userSource    Following[] @relation("Source")
  userSink      Following[] @relation("Sink")
}

model Paper {
  id    String  @id @default(cuid())
  url   String  @unique
  saves Saved[]
}

model Saved {
  id      String  @id @default(cuid())
  author  User    @relation(fields: [userId], references: [id])
  userId  String
  paper   Paper   @relation(fields: [paperId], references: [id])
  paperId String
  read    Boolean @default(false)
}

// user1 follows user2
model Following {
  id      String @id @default(cuid())
  userId1 String
  userId2 String
  user1   User   @relation("Source", fields: [userId1], references: [id])
  user2   User   @relation("Sink", fields: [userId2], references: [id])
}
